type Account @entity {
  id:          ID!
  name:        String!
  metaURI:     String!
  
  members:     [User!]!
  projects:    [Project!]! @derivedFrom(field: "account")
  logs:        [Log!]!     @derivedFrom(field: "account")
  
  blockTime:   BigInt
  blockNumber: BigInt
  logIndex:    BigInt
}

type Project @entity {
  id:          ID!
  name:        String!
  metaURI:     String!

  account:     Account!
  product:     Product
  members:     [User!]!
  releases:    [Release!]! @derivedFrom(field: "project")
  logs:        [Log!]!     @derivedFrom(field: "project")
  
  blockTime:   BigInt
  blockNumber: BigInt
  logIndex:    BigInt
}

type Release @entity {
  id:          ID!
  name:        String!
  metaURI:     String!
  
  project:     Project!
  signers:     [User!]!
  logs:        [Log!]! @derivedFrom(field: "release")
  
  blockTime:   BigInt
  blockNumber: BigInt
  logIndex:    BigInt
}

type Product @entity {
  id:               ID!
  limit:            BigInt!
  supply:           BigInt!
  
  royaltyAmount:    BigInt!
  royaltyRecipient: String!

  project:          Project!
  currencies:       [Currency!]! @derivedFrom(field: "product")
  purchases:        [Purchase!]! @derivedFrom(field: "product")
}

type Currency @entity {
  id:      ID!
  token:   String!
  product: Product!
  price:   BigInt!
  balance: BigInt!
}

type Purchase @entity {
  id:          ID!
  sender:      String!
  recipient:   String!
  
  token:       String!
  product:     Product!
  price:       BigInt!

  blockTime:   BigInt
  blockNumber: BigInt
  logIndex:    BigInt
}

type User @entity {
  id:       ID!
  accounts: [Account!]!
  projects: [Project!]!
}

type Log @entity {
  id:          ID!
  type:        String!
  accountID:    String
  sender:      String!
  member:      String

  account:     Account
  project:     Project
  release:     Release
  
  blockTime:   BigInt
  blockNumber: BigInt
  logIndex:    BigInt
}
