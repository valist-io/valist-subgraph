type Account @entity {
  id: ID!
  name: String!
  metaURI: String!
  members: [User!]!
  projects: [Project!]! @derivedFrom(field: "account")
  logs: [Log!]! @derivedFrom(field: "account")
  blockNumber: BigInt
  logIndex: BigInt
}

type Project @entity {
  id: ID!
  name: String!
  metaURI: String!
  members: [User!]!
  account: Account!
  releases: [Release!]! @derivedFrom(field: "project")
  product: Product
  logs: [Log!]! @derivedFrom(field: "project")
  blockNumber: BigInt
  logIndex: BigInt
}

type Release @entity {
  id: ID!
  name: String!
  metaURI: String!
  project: Project!
  signers: [User!]!
  logs: [Log!]! @derivedFrom(field: "release")
  blockNumber: BigInt
  logIndex: BigInt
}

type Product @entity {
  id: ID!
  project: Project!
  limit: BigInt!
  supply: BigInt!
  royaltyAmount: BigInt!
  royaltyRecipient: String!
  currencies: [Currency!]! @derivedFrom(field: "product")
  purchases: [Purchase!]! @derivedFrom(field: "product")
}

type Currency @entity {
  id: ID!
  token: String!
  product: Product!
  price: BigInt!
  balance: BigInt!
}

type Purchase @entity {
  id: ID!
  recipient: String!
  product: Product!
  price: BigInt!
  blockNumber: BigInt
  logIndex: BigInt
}

type User @entity {
  id: ID!
  accounts: [Account!]!
  projects: [Project!]!
}

type Log @entity {
  id: ID!
  type: String!
  account: Account
  project: Project
  release: Release
  sender: String
  blockNumber: BigInt
  logIndex: BigInt
}
